@font-face {
  font-family: Lastica;
  src: url(Lastica.ttf);
}

h1 {
  color: aliceblue;
  font-family: Lastica;
  position: absolute;
  top: 6vh;
  text-align: center;
  text-shadow: 0 0 3px #fff, 0 0 20px #fff, 0 0 30px #fff, 0 0 40px #0589ff, 0 0 70px #0589ff, 0 0 80px #0589ff, 0 0 100px #0589ff, 0 0 150px #0589ff;
}

body {
  background: #1B1A23;
  padding: 0;
  margin: 0;
  min-height: 100vh;
  font: 400 16px 'Poppins', sans-serif;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.button-grid {
  display: grid;
  grid-template-columns: repeat(4, minmax(auto, 1fr));
  gap: 20px;
  justify-content: center;
  align-items: center;
  margin: 20vh auto;
  width: 90%;
  max-width: 1200px;
}

/* Rest of your existing CSS animations and styles remain the same */

@font-face {
    font-family: Lastica;
    src: url(Lastica.ttf);
}

h1 {
    color: aliceblue;
    font-family: Lastica;
    position: absolute;
    top: 6vh;
    text-shadow: 0 0 3px #fff, 0 0 20px #fff, 0 0 30px #fff, 0 0 40px #0589ff, 0 0 70px #0589ff, 0 0 80px #0589ff, 0 0 100px #0589ff, 0 0 150px #0589ff;
}
body {
    background: #1B1A23;
    padding: 0;
    margin: 0;
    height: 100vh;
    font: 400 16px 'Poppins', sans-serif;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    .socials {
      position: fixed;
      display: block;
      left: 20px;
      bottom: 20px;
      > a {
        display: block;
        width: 30px;
        opacity: .2;
        transform: scale(var(--scale, .8));
        transition: transform .3s cubic-bezier(0.38,-0.12, 0.24, 1.91);
        &:hover {
          --scale: 1;
        }
      }
    }
  }

.button-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-gap: 10px;
    /* margin: 20px auto; */
    /* max-width: 600px; */
    margin: 20vh 10vw; /* Set top and bottom margin to 20% of viewport height and left and right margin to 10% of viewport width */
    max-width: 80vw; /* Set maximum width of grid container to 80% of viewport width */
    max-height: 60vh; 
}
.button-grid button {
    margin-top: 0;
    padding: 10vh;
    padding-top: 0;
    font-size: 16px;
    cursor: pointer;
    background-color: transparent;
    color: #fff;
    border: none;
    border-radius: 5px;
}

.power-switch {
    --color-invert: #ffffff;
    --width: 150px;    
    --height: 150px;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    width: var(--width);
    height: var(--height);
    .button {
      width: 100%;
      height: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
      position: relative;
      &:after {
        content: "";
        width: 100%;
        height: 100%;
        position: absolute;
        background: radial-gradient(circle closest-side, var(--color-invert), transparent);
        filter: blur(20px);
        opacity: 0;
        transition: opacity 1s ease, transform 1s ease;
        transform: perspective(1px) translateZ(0);
        backface-visibility: hidden;
      }
      .power-on,
      .power-off {
        height: 100%;
        width: 100%;
        position: absolute;
        z-index: 1;
        fill: none;
        stroke: var(--color-invert);
        stroke-width: 8px;
        stroke-linecap: round;
        stroke-linejoin: round;
        .line {
          opacity: .2;
        }
        .circle {
          opacity: .2;
          transform: rotate(-58deg);
          transform-origin: center 80px;
          stroke-dasharray: 220;
          stroke-dashoffset: 40;
        }
      }
      .power-on {
        filter: drop-shadow(0px 0px 6px rgba(255,255,255,.8));
        .line {
          opacity: 0;
          transition: opacity .3s ease 1s;
        }
        .circle {
          opacity: 1;
          stroke-dashoffset: 220;
          transition: transform 0s ease, stroke-dashoffset 1s ease 0s;
        }
      }
    }
    input {
      position: absolute;
      height: 100%;
      width: 100%;
      z-index: 2;
      cursor: pointer;
      opacity: 0;
      &:checked {
        + .button {
          &:after {
            opacity: 0.15;
            transform: scale(2) perspective(1px) translateZ(0);
            backface-visibility: hidden;
            transition: opacity .5s ease, transform .5s ease;
          }
          .power-on,
          .power-off {
            animation: click-animation .3s ease forwards;
            transform: scale(1);
            .line {
              animation: line-animation .8s ease-in forwards;
            }
            .circle {
              transform: rotate(302deg);
            }
          }
          .power-on {
            .line {
              opacity: 1;
              transition: opacity .05s ease-in .55s;
            }
            .circle {
              transform: rotate(302deg);
              stroke-dashoffset: 40;
              transition: transform .4s ease .2s, stroke-dashoffset .4s ease .2s;
            }
          }
        }
      }
    }
  }
  
  @keyframes line-animation {
    0% {
      transform: translateY(0);
    }
    10% {
      transform: translateY(10px);
    }
    40% {
      transform: translateY(-25px);
    }
    60% {
      transform: translateY(-25px);
    }
    85% {
      transform: translateY(10px);
    }
    100% {
      transform: translateY(0px);
    }
  }
  
  @keyframes click-animation {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(.9);
    }
    100% {
      transform: scale(1);
    }
  }
  
  
/* Media query for mobile screens */
@media screen and (max-width: 768px) {
  .button-grid {
      grid-template-columns: repeat(2, 1fr);
      margin: 15vh auto;
      gap: 15px;
      width: 95%;
  }

  h1 {
      font-size: 1.5rem;
      width: 90%;
      text-align: center;
  }
}

.button-grid button {
  margin: 0;
  padding: 10vh 5vh;
  padding-top: 0;
  font-size: 16px;
  cursor: pointer;
  background-color: transparent;
  color: #fff;
  border: none;
  border-radius: 5px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

/* Rest of your CSS remains the same */
.power-switch {
  --color-invert: #ffffff;
  --width: 150px;    
  --height: 150px;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--width);
  height: var(--height);
  /* ... rest of the power-switch styles ... */
}

/* Additional media query for power switch size on mobile */
/* @media screen and (max-width: 768px) {
  .power-switch {
      --width: 120px;
      --height: 120px;
  }

  .button-grid button {
      padding: 8vh 3vh;
  }
} */


.mic-switch {
  --color-invert: #ffffff;
  --color-glow: #ffeb3b;
  --width: 100px;    
  --height: 180px;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--width);
  height: var(--height);
}

.mic-switch .button {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  border-radius: 50px;
  background: rgba(255, 255, 255, 0.03);
}

.mic-switch .button:after {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 50px;
  background: radial-gradient(circle closest-side, var(--color-glow), transparent);
  filter: blur(20px);
  opacity: 0;
  transition: opacity 1s ease, transform 1s ease;
  transform: perspective(1px) translateZ(0);
  backface-visibility: hidden;
}

.mic-switch .mic-icon {
  height: 80%;
  width: 80%;
  position: absolute;
  z-index: 1;
  fill: none;
  stroke: var(--color-invert);
  stroke-width: 6px;
  stroke-linecap: round;
  stroke-linejoin: round;
  opacity: 0.2;
  transition: opacity 0.3s ease;
}

.wave-container {
  position: absolute;
  width: 200px;
  height: 200px;
  display: none;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.wave {
  position: absolute;
  width: 100%;
  height: 100%;
  border: 4px solid var(--color-glow);
  border-radius: 50%;
  opacity: 0;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0.5);
}

@keyframes waveAnimation {
  0% {
    transform: translate(-50%, -50%) scale(0.5);
    opacity: 0.8;
  }
  100% {
    transform: translate(-50%, -50%) scale(1.5);
    opacity: 0;
  }
}

.mic-switch input {
  position: absolute;
  height: 100%;
  width: 100%;
  z-index: 2;
  cursor: pointer;
  opacity: 0;
}

.mic-switch input:checked + .button:after {
  opacity: 0.15;
  transform: scale(1.1) perspective(1px) translateZ(0);
  backface-visibility: hidden;
  transition: opacity .5s ease, transform .5s ease;
}

.mic-switch input:checked + .button .mic-icon {
  opacity: 1;
  filter: drop-shadow(0px 0px 8px var(--color-glow));
}

.mic-switch input:checked + .button .wave-container {
  display: block;
}

.mic-switch input:checked + .button .wave-container .wave:nth-child(1) {
  animation: waveAnimation 2s infinite linear;
}

.mic-switch input:checked + .button .wave-container .wave:nth-child(2) {
  animation: waveAnimation 2s infinite linear 0.5s;
}

.mic-switch input:checked + .button .wave-container .wave:nth-child(3) {
  animation: waveAnimation 2s infinite linear 1s;
}

/* Custom microphone shape */
.mic-shape {
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 50px;
  overflow: hidden;
}

.mic-head {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 80%;
  height: 40%;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 40px 40px 0 0;
}

.mic-body {
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 40%;
  height: 60%;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 10px;
}

.video-background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  opacity: 0.4; /* Adjust transparency */
  z-index: -1; /* Place video behind other content */
}


.speaker-switch {
  --color-invert: #ffffff;
  --color-glow: #ffeb3b;
  --width: 180px;    
  --height: 180px;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--width);
  height: var(--height);
}

.speaker-switch .button {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  clip-path: path('M40 40 L80 40 L130 10 L130 170 L80 140 L40 140 Z');
  background:#5c5c6466;
}

.speaker-switch .button:after {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  background: radial-gradient(circle closest-side, var(--color-invert), transparent);
  filter: blur(20px);
  opacity: 0;
  transition: opacity 1s ease, transform 1s ease;
  transform: perspective(1px) translateZ(0);
  backface-visibility: hidden;
}

@keyframes spwaveAnimation {
  0% {
    transform: scaleX(0.2);
    opacity: 0.8;
  }
  100% {
    transform: scaleX(1);
    opacity: 0;
  }
}

.speaker-switch input {
  position: absolute;
  height: 100%;
  width: 100%;
  z-index: 2;
  cursor: pointer;
  opacity: 0;
}

.speaker-switch input:checked + .button {
  background: rgba(255, 255, 255, 0.1);
}

.speaker-switch input:checked + .button:after {
  opacity: 0.15;
  transform: scale(1.2) perspective(1px) translateZ(0);
  backface-visibility: hidden;
  transition: opacity .5s ease, transform .5s ease;
}

.speaker-switch input:checked + .button .wave-container {
  display: block;
}

.speaker-switch input:checked + .button .wave-container .wave:nth-child(1) {
  animation: waveAnimation 1.5s infinite ease-out;
}

.speaker-switch input:checked + .button .wave-container .wave:nth-child(2) {
  animation: waveAnimation 1.5s infinite ease-out 0.2s;
}

.speaker-switch input:checked + .button .wave-container .wave:nth-child(3) {
  animation: waveAnimation 1.5s infinite ease-out 0.4s;
}

/* Speaker details */
.speaker-details {
  position: absolute;
  left: 40px;
  width: 40px;
  height: 100px;
  border: 4px solid rgba(255, 255, 255, 0.2);
  transition: all 0.3s ease;
}

.speaker-cone {
  position: absolute;
  right: 50px;
  width: 50px;
  height: 100px;
  border-left: 4px solid #5c5c65;
  border-radius: 0 100% 100% 0;
  transition: all 0.3s ease;
}

.speaker-lines {
  position: absolute;
  left: 90px;
  width: 20px;
  height: 100px;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
}

.speaker-line {
  width: 100%;
  height: 4px;
  background: #5c5c64;
  transition: all 0.3s ease;
}

.speaker-switch input:checked + .button .speaker-details,
.speaker-switch input:checked + .button .speaker-cone,
.speaker-switch input:checked + .button .speaker-line {
  border-color: var(--color-glow);
  background-color: var(--color-glow);
  filter: drop-shadow(0px 0px 8px var(--color-glow));
}